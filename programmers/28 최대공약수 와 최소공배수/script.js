// 문제 설명
// 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.

// 제한 사항
// 두 수는 1이상 1000000이하의 자연수입니다.
// 입출력 예
// n	m	return
// 3	12	[3, 12]
// 2	5	[1, 10]
// 입출력 예 설명
// 입출력 예 #1
// 위의 설명과 같습니다.

// 입출력 예 #2
// 자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 [1, 10]을 리턴해야 합니다.

let n = 2; // 두 수는 1이상 1000000이하의 자연수입니다.
let m = 5; // 두 수는 1이상 1000000이하의 자연수입니다.

console.log(solution(n, m));

function solution(n, m) {
    biggest = euclidean(n,m);
    smallest = biggest * (n/biggest) * (m/biggest);
    return [biggest,smallest];
}

function euclidean(n,m){
    let r = m % n;
    if (r == 0) return n;
    return euclidean(r,n);
}

// 유클리드 호제법(최대 공약수 찾기)
// n 와 m의 최대공약수를 구하기 위해서, n를 m로 나눈 나머지 R1을 구합니다.
// m를 R1으로 나눈 나머지를 R2를 구합니다.
// R1을 R2로 나눈 나머지 R3를 구합니다.

// 이과정을 계속 반복하여 어느 한쪽이 나누어 떨어질때까지 반복합니다.
// 이직전 얻은 나머지가 최대 공약수 입니다.

// 최소공배수
// 

// 1254와 582의 최대공약수는 6!

// 1254 = 582×2+90
// 582=90×6+42
// 90=42×2+6
// 42=6×7
// 